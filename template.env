# =============================================================================
# Spotify-Snowflake Pipeline Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in your actual values
# Don't commit the actual .env file to version control!

# =============================================================================
# SPOTIFY API CONFIGURATION (Required)
# =============================================================================
# Get these from https://developer.spotify.com/dashboard
# 1. Create a new app in Spotify Developer Dashboard
# 2. Copy Client ID and Client Secret from your app settings
# 3. Add redirect URI in your app settings (use the default or customize)

SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here

# Redirect URI for OAuth flow (default should work for local development)
SPOTIFY_REDIRECT_URI=http://localhost:8080/callback

# Optional: If you have a refresh token from previous authentication
# SPOTIFY_REFRESH_TOKEN=your_refresh_token_here

# =============================================================================
# AWS S3 CONFIGURATION (Required)
# =============================================================================
# AWS credentials for S3 access
# You can get these from AWS IAM console or AWS CLI configuration
# Ensure the user has S3 read/write permissions for your bucket

AWS_ACCESS_KEY_ID=your_aws_access_key_id_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key_here

# AWS region where your S3 bucket is located
AWS_REGION=us-west-2

# S3 bucket name for storing the pipeline data
# This bucket will be created automatically if it doesn't exist
S3_BUCKET_NAME=your-spotify-pipeline-bucket-name

# =============================================================================
# SNOWFLAKE CONFIGURATION (Required for proper stage integration)
# =============================================================================
# These settings ensure data is properly organized for Snowflake external stages

# S3 prefix for organizing files (used by Snowflake external stage)
SNOWFLAKE_STAGE_PREFIX=spotify_listening_history/

# Date format for partitioning S3 files
DATE_PARTITION_FORMAT=%Y/%m/%d

# =============================================================================
# PIPELINE CONFIGURATION (Optional - defaults will be used if not specified)
# =============================================================================

# How often to fetch new data (in minutes)
# FETCH_INTERVAL_MINUTES=30

# Number of tracks to fetch per batch (max 50 per Spotify API)
# BATCH_SIZE=50

# Number of retry attempts for failed API calls
# MAX_RETRIES=3

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp template.env .env
# 2. Fill in your Spotify API credentials from https://developer.spotify.com/dashboard
# 3. Fill in your AWS credentials and S3 bucket name
# 4. Run: python main.py test  (to verify connections)
# 5. Run: python main.py run-once  (to test the pipeline)
#
# For detailed setup instructions, see QUICK_START.md or README.md
